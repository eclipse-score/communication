@startuml structural_event_field_extensions
title "Structural Event Field Extensions"

class "score::mw::com::impl::tracing::SkeletonEventTracingData" {
  +service_element_instance_identifier_view{} : ServiceElementInstanceIdentifierView
  +trace_context_id : ITracingRuntimeBinding::TraceContextId
  +enable_send : bool
  +enable_send_with_allocate : bool
}

class "score::mw::com::impl::tracing::ProxyEventTracingData" {
  +service_element_instance_identifier_view{} : ServiceElementInstanceIdentifierView
  +enable_subscribe : bool
  +enable_unsubscribe : bool
  +enable_subscription_state_changed : bool
  +enable_set_subcription_state_change_handler : bool
  +enable_unset_subscription_state_change_handler : bool
  +enable_call_subscription_state_change_handler : bool
  +enable_set_receive_handler : bool
  +enable_unset_receive_handler : bool
  +enable_call_receive_handler : bool
  +enable_get_new_samples : bool
  +enable_new_samples_callback : bool
}

class "score::mw::com::impl::SkeletonEventBase" {
  +SkeletonEventBase(std::unique_ptr<SkeletonEventBindingBase> binding)
  +PrepareOffer(): score::ResultBlank
  +PrepareStopOffer(): void
  +UpdateSkeletonReference(SkeletonBase& base_skeleton): void
  -binding_: std::unique_ptr<SkeletonEventBindingBase>
  -tracing_data_: SkeletonEventTracing
}

class "score::mw::com::impl::ProxyEventBase" {
  +ProxyEventBase(proxy_event_binding: std::unique_ptr<ProxyEventBindingBase> proxy_event_binding)
  +Subscribe(size_t max_sample_count): ResultBlank
  +GetSubscriptionState() : SubscriptionState
  +Unsubscribe(): void
  +GetFreeSampleCount(): Result<size_t>
  +GetNumNewSamplesAvailable(): Result<std::size_t>
  +SetReceiveHandler(EventReceiveHandler handler) : ResultBlank
  +UnsetReceiveHandler() : ResultBlank
  +IsBindingValid() : bool
  -binding_base_ : std::unique_ptr<ProxyEventBindingBase>
  -tracker_ : std::unique_ptr<SampleReferenceTracker>
  -tracing_data_: ProxyEventTracing
}

"score::mw::com::impl::SkeletonEventBase" o-- "score::mw::com::impl::tracing::SkeletonEventTracingData" : 0..1
"score::mw::com::impl::ProxyEventBase" o-- "score::mw::com::impl::tracing::ProxyEventTracingData" : 0..1

@enduml
