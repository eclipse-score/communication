<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>12</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2340</x>
      <y>600</y>
      <w>492</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>/mw::com::message_passing::ISender/
--
/+Send(ShortMessage) = 0: score::cpp::expected&lt;Error&gt;/
/+Send(MediumMessage) = 0: score::cpp::expected&lt;Error&gt;/
/+HasNonBlockingGuarantee() = 0: bool/
--
Notes: Opens an OS specific underlying communication
channel and transmits the specified message.

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2340</x>
      <y>924</y>
      <w>768</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>/mw::com::message_passing::IReceiver/
--
/+Register(MessageId, score::cpp::callback&lt;void(ShortMessagePayload), pid_t&gt;) = 0: bool/
/+Register(MessageId, score::cpp::callback&lt;void(MediumMessagePayload, pid_t)&gt;) = 0: bool/
/+StartListening() = 0: score::cpp::expected&lt;Error&gt;/
--
Notes: Creates/Opens an OS specific underlying communication channel
and receives specified messages.
If a handler has been registered for a specific message, it is invoked.
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2256</x>
      <y>48</y>
      <w>516</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>lola::ElementFqId
--
+serviceId_ : uint16_t
+instanceId_ : uint16_t
+elementId_ : uint16_t
+element_type_ : ElementType
--
+ElementFqId(service_id : const std::uint16_t,event_id : const std::uint8_t,instance_id : const std::uint16_t)
+ToString() : std::string
--
Notes:
Full qualified event ID within a LoLa process.
At least WITHIN one LoLa enabled process the
namespace provided by those types should be enough.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1056</x>
      <y>780</y>
      <w>1068</w>
      <h>348</h>
    </coordinates>
    <panel_attributes>lola::messaging::MessagePassingFacade
--
-msg_receiver_asil_b_: MessageReceiveCtrl
-msg_receiver_qm_: MessageReceiveCtrl
-notify_event_handler_ : NotifyEventHandler
-message_passing_ctrl_ : IMessagePassingControl&amp;
--
+MessagePassingFacade(IMessagePassingControl&amp; msgpass_ctrl,
    const AsilSpecificCfg config_asil_qm,
    const score::cpp::optional&lt;AsilSpecificCfg&gt; config_asil_b)
+RegisterEventNotification(ASILType, ElementFqId, std::weak_ptr&lt;ScopedEventReceiveHandler&gt;, pid_t): RegistrationHandle
+ReregisterEventNotification(QualityType, ElementFqId, pid_t)
+UnregisterEventNotification(ASILType, RegistrationHandle) : void
+NotifyEvent(ASILType, ElementFqId): void
+NotifyOutdatedNodeId(QualityType asil_level, pid_t outdated_node_id, pid_t target_node_id) : void




</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>2832</x>
      <y>48</y>
      <w>288</w>
      <h>228</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
_:lola::MessageIds_
--
SUBSCRIBE_EVENT
SUBSCRIBE_EVENT_RESULT
UNSUBSCRIBE_EVENT
UNSUBSCRIBE_EVENT_ACK
REGISTER_EVENT_NOTIFIER
UNREGISTER_EVENT_NOTIFIER
NOTIFY_EVENT
DISCONNECT_EVENT</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3432</x>
      <y>216</y>
      <w>960</w>
      <h>228</h>
    </coordinates>
    <panel_attributes>lola::SubscribeEventMessage
--
+element_fq_id_ : ElementFqId
+max_samples_: std::uint8_t
+call_seq_count_: CallSeqCounterType
+sender_node_id_: pid_t
--
+DeserializeToSubscribeEventMessage(const MediumMessage&amp;, pid_t sender_node_id): SubscribeEventMessage
+SubscribeEventMsg(ElementFqId, uint8_t max_samples_, CallSeqCounterType, pid_t sender_node_id)
+SerializeToMediumMessage() : MediumMessage

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3432</x>
      <y>0</y>
      <w>264</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>&lt;&lt;typedef&gt;&gt;
lola::CallSeqCounterType
--
using std::uint16_t</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3168</x>
      <y>156</y>
      <w>408</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>mw::com::message_passing::MediumMessage</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3348</x>
      <y>180</y>
      <w>108</w>
      <h>204</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
uses</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0;70.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3432</x>
      <y>852</y>
      <w>1056</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lola::messaging::SubscribeEventResultMessage
--
+subscribeSuccess: bool
+call_seq_count_: CallSeqCounterType
+sender_node_id_: pid_t
--
+SerializeToShortMessage() : ShortMessage const
+DeserializeToSubscribeEventResultMessage(ShortMessage, pid_t sender_node_id): SubscribeEventResultMessage
+SubscribeEventResultMsg(bool subscribeSuccess, CallSeqCounterType, pid_t sender_node_id)



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3360</x>
      <y>792</y>
      <w>96</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
uses</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;60.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3192</x>
      <y>768</y>
      <w>396</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>mw::com::message_passing::ShortMessage</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3432</x>
      <y>480</y>
      <w>960</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>lola::messaging::UnsubscribeEventMessage
--
+element_fq_id_ : ElementFqId
+max_samples_: std::uint8_t
+call_seq_count_: CallSeqCounterType
+sender_node_id_: pid_t
--
+DeserializeToUnsubscribeEventMessage(const MediumMessage&amp;, pid_t sender_node_id): UnsubscribeEventMessage
+UnsubscribeEventMsg(ElementFqId, uint8_t max_samples_, CallSeqCounterType, pid_t sender_node_id)
+SerializeToMediumMessage() : MediumMessage</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3324</x>
      <y>180</y>
      <w>132</w>
      <h>456</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
uses</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;360.0;90.0;360.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4188</x>
      <y>1428</y>
      <w>288</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>RegisterEventNotifierMsg

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>0</x>
      <y>588</y>
      <w>852</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>_:score::com::impl::lola::Runtime_
--
--
+Runtime(config : const Configuration&amp;)
+GetBindingType() : BindingType
+GetLolaMessaging() : lola::IMessagePassingService&amp;
+HasAsilBSupport() : bool
+GetMessagePassingCfg(asil_level : const QualityType) : MessagePassingFacade::AsilSpecificCfg</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>684</y>
      <w>240</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;10.0;130.0;130.0;180.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1056</x>
      <y>1224</y>
      <w>1044</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lola::messaging::NotifyEventHandler
--
+NotifyEventHandler(IMessagePassingControl&amp;, bool asilBCapability, const score::cpp::stop_token&amp;)

+RegisterMessageReceivedCallbacks(QualityType, message_passing::IReceiver&amp;) : void
+NotifyEvent(QualityType, ElementFqId) : void
+RegisterEventNotification(QualityType, ElementFqId, IMessagePassingService::EventUpdateNotificationHandler, pid_t)
        : IMessagePassingService::HandlerRegistrationNoType
+RegisterEventNotification(ASILType, ElementFqId, std::weak_ptr&lt;ScopedEventReceiveHandler&gt;, pid_t): RegistrationHandle
+UnregisterEventNotification(QualityType, ElementFqId, IMessagePassingService::HandlerRegistrationNoType, pid_t) : void
+NotifyOutdatedNodeId(QualityType asil_level, pid_t outdated_node_id, pid_t target_node_id) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>996</x>
      <y>84</y>
      <w>1188</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>/messaging::IMessagePassingService/
--
using HandlerRegistrationNoType std::uint32_t
using EventSubscriptionNoType std::uint32_t
--
+RegisterEventNotification(QualityType, ElementFqId, std::weak_ptr&lt;ScopedEventReceiveHandler&gt;, pid_t) = 0: HandlerRegistrationNoType
+ReregisterEventNotification(QualityType, ElementFqId, pid_t) = 0
+UnregisterEventNotification(QualityType, HandlerRegistrationNoType) = 0: void
+NotifyEvent(QualityType, ElementFqId) = 0: void
+NotifyOutdatedNodeId(QualityType asil_level, pid_t outdated_node_id, pid_t target_node_id) = 0: void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1152</x>
      <y>336</y>
      <w>36</w>
      <h>468</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;370.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1200</x>
      <y>372</y>
      <w>876</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>/lola::messaging::IMessagePassingControl/
--
+GetMessagePassingSender(QualityType, pid_t targetNodeId) = 0: message_passing::ISender*
+CreateMessagePassingName(QualityType, pid_t) = 0: std::string
+GetNodeIdentifier() = 0: pid_t</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1668</x>
      <y>468</y>
      <w>36</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1080</x>
      <y>1116</y>
      <w>36</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1260</x>
      <y>540</y>
      <w>804</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>lola::messaging::MessagePassingControl
--
-senders_qm_ : std::unordered_map&lt;pid_t, std::unique_ptr&lt;ISender&gt;&gt;
-senders_asil_ : std::unordered_map&lt;pid_t, std::unique_ptr&lt;ISender&gt;&gt;
--
+MessagePassingCtrl(asil_b_capability : const bool,sender_queue_size : const std::int32_t)
+GetMessagePassingSender(QualityType, pid_t targetNodeId) : message_passing::ISender
+GetNodeIdentifier(): pid_t
+CreateMessagePassingName(QualityType, pid_t targetNodeId): std::string


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1836</x>
      <y>684</y>
      <w>36</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>900</x>
      <y>420</y>
      <w>324</w>
      <h>840</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
uses</panel_attributes>
    <additional_attributes>250.0;10.0;10.0;10.0;10.0;680.0;130.0;680.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>624</y>
      <w>444</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;350.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2340</x>
      <y>420</y>
      <w>804</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>mw::com::message_passing::SenderFactory
--
_Create(std::string identifier, score::cpp::stop_token const&amp;, std::int32_t maxNumbersOfRetry = 5)_
_       : std::unique_ptr&lt;ISender&gt;_
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2544</x>
      <y>504</y>
      <w>96</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
creates</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2052</x>
      <y>468</y>
      <w>312</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
uses</panel_attributes>
    <additional_attributes>240.0;10.0;190.0;10.0;190.0;100.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2340</x>
      <y>780</y>
      <w>804</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>mw::com::message_passing::ReceiverFactory
--
_+Create(std::string identifier, concurrency::Executor&amp;, std::vector&lt;uid_t&gt; allowedUserIds,_
_        std::int32_t maxNumberMessageInQueue = 10) : std::unique_ptr&lt;IReceiver&gt;_
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2556</x>
      <y>864</y>
      <w>96</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
creates</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2112</x>
      <y>828</y>
      <w>252</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
uses</panel_attributes>
    <additional_attributes>190.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1452</x>
      <y>1560</y>
      <w>864</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>/lola::messaging::HandlerBase/
--
#mp_control_: IMessagePassingControl&amp;
#asil_b_capability_: bool
--
+HandlerBase(mp_control : IMessagePassingControl&amp;,asil_b_capability : const bool)
/+RegisterMessageReceivedCallbacks(QualityType, message_passing::IReceiver&amp; receiver) = 0: void/


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1932</x>
      <y>1452</y>
      <w>36</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>756</x>
      <y>180</y>
      <w>180</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lola::ASILType
&lt;&lt;enum&gt;&gt;
--
INVALID
ASIL_QM
ASIL_B</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>924</x>
      <y>252</y>
      <w>96</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>864</y>
      <w>228</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=(+)-</panel_attributes>
    <additional_attributes>170.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2112</x>
      <y>1020</y>
      <w>252</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
bg=black
m2=1..2</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>828</y>
      <w>852</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>MessageReceiveCtrl
--
+receiver: std::unique_ptr&lt;IReceiver&gt;
+threadPool: std::unique_ptr&lt;concurrency::ThreadPool&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4188</x>
      <y>1620</y>
      <w>288</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>NotifyEventMsg

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3432</x>
      <y>1200</y>
      <w>1104</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>template=id
lola::messaging::ElementFqIdMessage
--
+element_fq_id_ : ElementFqId
+sender_node_id_: pid_t
--
+DeserializeToElementFqIdMessage(message_payload : ShortMessagePayload,sender_node_id : pid_t): ElementFqIdMessage
+ElementFqIdMessage(ElementFqId, pid_t sender_node_id)
+SerializeToShortMessage() : ShortMessage
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3432</x>
      <y>1032</y>
      <w>1056</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>lola::messaging::UnsubscribeEventAckMessage
--
+call_seq_count_: CallSeqCounterType
+sender_node_id_: pid_t
--
+DeserializeToUnsubscribeEventAckMessage(ShortMessage, pid_t sender_node_id): UnsubscribeEventAckMessage
+UnsubscribeEventAckMessage(CallSeqCounterType, pid_t sender_node_id)
+SerializeToShortMessage() : ShortMessage const

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3612</x>
      <y>1368</y>
      <w>600</w>
      <h>312</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
&lt;&lt;bind&gt;&gt;
&lt;id -&gt; kNotifyEvent&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;240.0;480.0;240.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3612</x>
      <y>1368</y>
      <w>600</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
&lt;&lt;bind&gt;&gt;
&lt;id -&gt; kRegisterEventNotifier&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0;480.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4188</x>
      <y>1524</y>
      <w>288</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>UnregisterEventNotifierMsg

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3612</x>
      <y>1368</y>
      <w>600</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
&lt;&lt;bind&gt;&gt;
&lt;id -&gt; kUnregisterEventNotifier&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0;480.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>4188</x>
      <y>1704</y>
      <w>288</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>DisconnectEventMessage

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3336</x>
      <y>792</y>
      <w>120</w>
      <h>348</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
uses</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;270.0;80.0;270.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3612</x>
      <y>1368</y>
      <w>600</w>
      <h>396</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
&lt;&lt;bind&gt;&gt;
&lt;id -&gt; kDisconnectEvent&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;310.0;480.0;310.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>408</y>
      <w>852</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>mw::com::impl::lola::IRuntime
--
+GetLolaMessaging() : lola::IMessagePassingService&amp;
+HasAsilBSupport() : bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>408</x>
      <y>480</y>
      <w>36</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>144</x>
      <y>264</y>
      <w>588</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>mw::com::impl::IRuntimeBinding
--
+ GetBindingType() : BindingType
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>408</x>
      <y>324</y>
      <w>36</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
</diagram>
